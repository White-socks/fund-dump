<?xml version="1.0" encoding="UTF-8" ?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.github.whitesocks.fund.funddump.mapper.FundCompanyMapper">

    <resultMap id="FundCompanyMapperMap" type="io.github.whitesocks.fund.funddump.model.FundCompanyBasic">
        <id column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="suoxie" property="suoxie"/>
        <result column="level" property="level"/>
        <result column="en" property="en"/>
        <result column="address" property="address"/>
        <result column="manager" property="manager"/>
        <result column="web_ide" property="webSide"/>
        <result column="phone" property="phone"/>
        <result column="scope" property="scope"/>
        <result column="jjum" property="jjum"/>
        <result column="person_num" property="personNum"/>
        <result column="set_date" property="setDate"/>
        <result column="company_rops" property="companyProps"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        fund_company
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        code, `name`,suoxie,`level`, en, address, manager, web_side, phone, `scope`, jjum, person_num, set_date, company_rops, created_at,updated_at
    </sql>

    <sql id="vals">
        #{code}, #{name},#{suoxie},#{level}, #{en}, #{address},#{manager},#{webSide},#{phone},#{scope},#{jjum},#{personNum},#{setDate},#{companyProps},now(), now()
    </sql>

    <sql id="criteria">
        <if test="code != null">AND code = #{code}</if>
        <if test="name != null">AND name = #{name}</if>
        <if test="suoxie != null">AND suoxie = #{suoxie}</if>
        <if test="level != null">AND level = #{level}</if>
        <if test="en != null">AND en = #{en}</if>
        <if test="address != null">AND address = #{address}</if>
        <if test="manager != null">AND manager = #{manager}</if>
        <if test="webSide != null">AND web_side = #{webSide}</if>
        <if test="phone != null">AND phone = #{phone}</if>
        <if test="scope != null">AND `scope` = #{scope}</if>
        <if test="jjum != null">AND jjum = #{jjum}</if>
        <if test="personNum != null">AND person_num = #{personNum}</if>
        <if test="setDate != null">AND set_date = #{setDate}</if>
        <if test="companyProps != null">AND company_rops = #{companyProps}</if>
    </sql>



    <insert id="create" parameterType="io.github.whitesocks.fund.funddump.model.FundCompanyBasic" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        ( <include refid="cols_exclude_id"/> )
        VALUES
        <foreach collection="companies" item="i" separator=",">
            (#{i.code}, #{i.name},#{i.suoxie},#{i.level}, #{i.en}, #{i.address},#{i.manager},#{i.webSide},#{i.phone},#{i.scope},#{i.jjum},#{i.personNum},#{i.setDate},#{i.companyProps}, now(), now())
        </foreach>
    </insert>


    <update id="update" parameterType="io.github.whitesocks.fund.funddump.model.FundCompanyBasic">
        UPDATE
        <include refid="tb"/>
        SET
        <if test="code != null">code = #{code},</if>
        <if test="name != null">name = #{name},</if>
        <if test="fullName != null">full_name = #{fullName},</if>
        updated_at = now()
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="FundCompanyMapperMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>



    <select id="findByIds" parameterType="list" resultMap="FundCompanyMapperMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        id IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>

    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="FundCompanyMapperMap">
        SELECT id,
        <include refid="cols_exclude_id"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>

        </where>
        LIMIT #{offset}, #{limit}
    </select>



    <select id="list" parameterType="map" resultMap="FundCompanyMapperMap">
        SELECT id,
        <include refid="cols_exclude_id"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>





    <delete id="delete" parameterType="long" >
        DELETE
        FROM <include refid="tb"/>
        WHERE
        id = #{id}
    </delete>


</mapper>